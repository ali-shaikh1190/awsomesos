AWSTemplateFormatVersion: '2010-09-09'
Description: DC/OS stack (3 AZs)
Metadata:
  TemplateGenerationDate: '2016-06-29 17:02:00.000000'
  DcosImageCommit: 0ce03387884523f02624d3fb56c7fbe2e06e181b
  Todo: /etc/hosts to include ip-x-x-x-x
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Ownership
      Parameters:
      - Owner
      - Project
    - Label:
        default: Network Configuration
      Parameters:
      - Vpc
      - PublicSubnetA
      - PublicSubnetB
      - PublicSubnetC
      - PrivateSubnetA
      - PrivateSubnetB
      - PrivateSubnetC
    - Label:
        default: EFS Configuration
      Parameters:
      - FileSystem
    - Label:
        default: Cluster Configuration
      Parameters:
      - SshKeyPair
      - AdminLocation
      - Ami
      - OAuthEnabled
      - NumMasterNodes
      - NumPrivateSlaveNodes
      - NumPublicSlaveNodes
    ParameterLabels:
      Owner:
        default: Team or Individual Owner
Parameters:
  # Ownership
  Owner:
    Type: String
    Default: FirstName LastName
  Project:
    Type: String
    Default: DCOS-1-9
  Vpc:
    Description: Select VPC ID.
    Type: AWS::EC2::VPC::Id
  PublicSubnetA:
    Description: Public subnet A CIDR block.
    Type: AWS::EC2::Subnet::Id
  PublicSubnetB:
    Description: Public subnet B CIDR block.
    Type: AWS::EC2::Subnet::Id
  PublicSubnetC:
    Description: Public subnet C CIDR block.
    Type: AWS::EC2::Subnet::Id
  PrivateSubnetA:
    Description: Private subnet A CIDR block.
    Type: AWS::EC2::Subnet::Id
  PrivateSubnetB:
    Description: Private subnet B CIDR block.
    Type: AWS::EC2::Subnet::Id
  PrivateSubnetC:
    Description: Private subnet C CIDR block.
    Type: AWS::EC2::Subnet::Id
  FileSystem:
    Description: EFS FileSystem Id.
    Type: String
    ConstraintDescription: Please provide the filesystem id of the EFS Filesystem to be mounted.
  Ami:
    Type: String
    Description: 'Optional: Custom CoreOS AMI id'
    Default: default
  SshKeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: SSH key pair
  AdminLocation:
    Type: String
    Description: IP range (CIDR) to whitelist for access to the admin zone
    Default: 0.0.0.0/0
  OAuthEnabled:
    Type: String
    Description: Enable OAuth authentication?
    AllowedValues:
    - 'true'
    - 'false'
    Default: 'true'
  NumMasterNodes:
    Type: Number
    Description: Number of master nodes
    AllowedValues:
    - 1
    - 3
    - 5
    Default: '3'
  NumPrivateSlaveNodes:
    Type: Number
    Description: Number of private slave nodes
    AllowedValues:
    - 1
    - 3
    - 5
    Default: '3'
  NumPublicSlaveNodes:
    Type: Number
    Description: Number of public slave nodes
    MinValue: '1'
    Default: '1'
Conditions:
  RegionIsUsEast1: !Equals [!Ref 'AWS::Region', us-east-1]
  CustomCoreOSAMI: !Not [!Equals [!Ref 'Ami', default]]
Mappings:
  RegionMap:
    ap-northeast-1:
      AMI: ami-86f1b9e1
    eu-west-1:
      AMI: ami-89f6dbef
    us-gov-west-1:
      AMI: ami-a846fcc9
    us-west-1:
      AMI: ami-1a1b457a
    sa-east-1:
      AMI: ami-c51573a9
    ap-southeast-1:
      AMI: ami-27cc7d44
    ap-southeast-2:
      AMI: ami-5baeae38
    us-east-1:
      AMI: ami-42ad7d54
    eu-central-1:
      AMI: ami-4733f928
    us-west-2:
      AMI: ami-2551d145
  ClusterPackagesJson:
    default:
      default: '["3dt--7847ebb24bf6756c3103902971b34c3f09c3afbd", "adminrouter--0493a6fdaed08e1971871818e194aa4607df4f09",
        "avro-cpp--760c214063f6b038b522eaf4b768b905fed56ebc", "boost-libs--2015ccb58fb756f61c02ee6aa05cc1e27459a9ec",
        "bootstrap--59a905ecee27e71168ed44cefda4481fb76b816d", "boto--6344d31eef082c7bd13259b17034ea7b5c34aedf",
        "check-time--be7d0ba757ec87f9965378fee7c76a6ee5ae996d", "cni--e48337da39a8cd379414acfe0da52a9226a10d24",
        "cosmos--20decef90f0623ed253a12ec4cf5c148b18d8249", "curl--fc3486c43f98e63f9b12675f1356e8fe842f26b0",
        "dcos-config--setup_959e9da3825c3edcf21a0d0fba72929d48efff9c", "dcos-history--77b0e97d7b25c8bedf8f7da0689cac65b83e3813",
        "dcos-image--bda6a02bcb2eb21c4218453a870cc584f921a800", "dcos-image-deps--83584fd868e5b470f7cf754424a9a75b328e9b68",
        "dcos-integration-test--c28bcb2347799dca43083f55e4c7b28503176f9c", "dcos-log--4d630df863228f38c6333e44670b4c4b20a74832",
        "dcos-metadata--setup_959e9da3825c3edcf21a0d0fba72929d48efff9c", "dcos-metrics--23ee2f89c58b1258bc959f1d0dd7debcbb3d79d2",
        "dcos-oauth--0079529da183c0f23a06d2b069721b6fa6cc7b52", "dcos-signal--1bcd3b612cbdc379380dcba17cdf9a3b6652d9dc",
        "dcos-ui--d4afd695796404a5b35950c3daddcae322481ac4", "dnspython--0f833eb9a8abeba3179b43f3a200a8cd42d3795a",
        "docker-gc--59a98ed6446a084bf74e4ff4b8e3479f59ea8528", "dvdcli--5374dd4ffb519f1dcefdec89b2247e3404f2e2e3",
        "erlang--a9ee2530357a3301e53056b36a93420847b339a3", "exhibitor--72d9d8f947e5411eda524d40dde1a58edeb158ed",
        "flask--26d1bcdb2d1c3dcf1d2c03bc0d4f29c86d321b21", "java--cd5e921ce66b0d3303883c06d73a657314044304",
        "libevent--208be855d2be29c9271a7bd6c04723ff79946e02", "libffi--83ce3bd7eda2ef089e57efd2bc16c144d5a1f094",
        "libsodium--9ff915db08c6bba7d6738af5084e782b13c84bf8", "logrotate--7f7bc4416d3ad101d0c5218872858483b516be07",
        "marathon--bfb24f7f90cb3cd52a1cb22a07caafa5013bba21", "mesos--aaedd03eee0d57f5c0d49c74ff1e5721862cad98",
        "mesos-dns--0401501b2b5152d01bfa84ff6d007fdafe414b16", "mesos-modules--311849eaae42696b8a7eefe86b9ab3ebd9bd48f5",
        "metronome--467e4c64f804dbd4cd8572516e111a3f9298c10d", "navstar--1128db0234105a64fb4be52f4453cd6aa895ff30",
        "ncurses--d889894b71aa1a5b311bafef0e85479025b4dacb", "octarine--e86d3312691b12523280d56f6260216729aaa0ad",
        "openssl--b01a32a42e3ccba52b417276e9509a441e1d4a82", "pkgpanda-api--541feb8a8be58bdde8fecf1d2e5bfa0515f5a7d0",
        "pkgpanda-role--f8a749a4a821476ad2ef7e9dd9d12b6a8c4643a4", "pytest--78aee3e58a049cdab0d266af74f77d658b360b4f",
        "python--b7a144a49577a223d37d447c568f51330ee95390", "python-azure-mgmt-resource--03c05550f43b0e7a4455c33fe43b0deb755d87f0",
        "python-cryptography--4184767c68e48801dd394072cb370c610a05029d", "python-dateutil--fdc6ff929f65dd0918cf75a9ad56704683d31781",
        "python-docopt--beba78faa13e5bf4c52393b4b82d81f3c391aa65", "python-gunicorn--a537f95661fb2689c52fe12510eb0d01cb83af60",
        "python-isodate--40d378c688e6badfd16676dd8b51b742bfebc8d5", "python-jinja2--7450f5ae5a822f63f7a58c717207be0456df51ed",
        "python-kazoo--cb7ce13a1068cd82dd84ea0de32b529a760a4bdd", "python-markupsafe--dd46d2a3c58611656a235f96d4adc51b2a7a590e",
        "python-passlib--802ec3605c0b82428fedba60983b1bafaa036bb8", "python-pyyaml--81dd44cc4a24db7cefa7016c6586a131acf279c3",
        "python-requests--1b2cadbd3811cc0c2ee235ce927e13ea1d6af41d", "python-retrying--eb7b8bac133f50492b1e1349cbe77c3e38bd02c3",
        "python-tox--07244f8a939a10353634c952c6d88ec4a3c05736", "rexray--869621bb411c9f2a793ea42cdfeed489e1972aaa",
        "six--f06424b68523c4dfa2a7c3e7475d479f3d361e42", "spartan--9cc57a3d55452b905d90e3201f56913140914ecc",
        "strace--7d01796d64994451c1b2b82d161a335cbe90569b", "teamcity-messages--e623a4d86eb3a8d199cefcc240dd4c5460cb2962",
        "toybox--f235594ab8ea9a2864ee72abe86723d76f92e848"]'
Resources:
  LbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref 'Vpc'
      GroupDescription: Mesos master LB
  AdminSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref 'Vpc'
      GroupDescription: Enable admin access to servers
      SecurityGroupIngress:
      - ToPort: '22'
        CidrIp: !Ref 'AdminLocation'
        IpProtocol: tcp
        FromPort: '22'
      - ToPort: '80'
        CidrIp: !Ref 'AdminLocation'
        IpProtocol: tcp
        FromPort: '80'
      - ToPort: '443'
        CidrIp: !Ref 'AdminLocation'
        IpProtocol: tcp
        FromPort: '443'
  PublicSlaveSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref 'Vpc'
      GroupDescription: Mesos slaves public
  MasterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref 'Vpc'
      GroupDescription: Mesos masters
      SecurityGroupIngress:
      - ToPort: '5050'
        SourceSecurityGroupId: !Ref 'LbSecurityGroup'
        IpProtocol: tcp
        FromPort: '5050'
      - ToPort: '80'
        SourceSecurityGroupId: !Ref 'LbSecurityGroup'
        IpProtocol: tcp
        FromPort: '80'
      - ToPort: '8080'
        SourceSecurityGroupId: !Ref 'LbSecurityGroup'
        IpProtocol: tcp
        FromPort: '8080'
      - ToPort: '8181'
        SourceSecurityGroupId: !Ref 'LbSecurityGroup'
        IpProtocol: tcp
        FromPort: '8181'
      - ToPort: '2181'
        SourceSecurityGroupId: !Ref 'LbSecurityGroup'
        IpProtocol: tcp
        FromPort: '2181'
  SlaveSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref 'Vpc'
      GroupDescription: Mesos slaves
  MasterToMasterIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      ToPort: '65535'
      SourceSecurityGroupId: !Ref 'MasterSecurityGroup'
      IpProtocol: '-1'
      GroupId: !Ref 'MasterSecurityGroup'
      FromPort: '0'
  SlaveToPublicSlaveIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      ToPort: '65535'
      SourceSecurityGroupId: !Ref 'SlaveSecurityGroup'
      IpProtocol: '-1'
      GroupId: !Ref 'PublicSlaveSecurityGroup'
      FromPort: '0'
  SlaveToMasterIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      ToPort: '65535'
      SourceSecurityGroupId: !Ref 'SlaveSecurityGroup'
      IpProtocol: '-1'
      GroupId: !Ref 'MasterSecurityGroup'
      FromPort: '0'
  SlaveToMasterLbIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      ToPort: '2181'
      SourceSecurityGroupId: !Ref 'SlaveSecurityGroup'
      IpProtocol: tcp
      GroupId: !Ref 'LbSecurityGroup'
      FromPort: '2181'
  PublicSlaveToSlaveIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      ToPort: '65535'
      SourceSecurityGroupId: !Ref 'PublicSlaveSecurityGroup'
      IpProtocol: '-1'
      GroupId: !Ref 'SlaveSecurityGroup'
      FromPort: '0'
  MasterToSlaveIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      ToPort: '65535'
      SourceSecurityGroupId: !Ref 'MasterSecurityGroup'
      IpProtocol: '-1'
      GroupId: !Ref 'SlaveSecurityGroup'
      FromPort: '0'
  PublicSlaveIngressOne:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      ToPort: '21'
      CidrIp: 0.0.0.0/0
      IpProtocol: tcp
      GroupId: !Ref 'PublicSlaveSecurityGroup'
      FromPort: '0'
  PublicSlaveIngressTwo:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      ToPort: '5050'
      CidrIp: 0.0.0.0/0
      IpProtocol: tcp
      GroupId: !Ref 'PublicSlaveSecurityGroup'
      FromPort: '23'
  PublicSlaveIngressThree:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      ToPort: '65535'
      CidrIp: 0.0.0.0/0
      IpProtocol: tcp
      GroupId: !Ref 'PublicSlaveSecurityGroup'
      FromPort: '5052'
  PublicSlaveIngressFour:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      ToPort: '21'
      CidrIp: 0.0.0.0/0
      IpProtocol: udp
      GroupId: !Ref 'PublicSlaveSecurityGroup'
      FromPort: '0'
  PublicSlaveIngressFive:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      ToPort: '5050'
      CidrIp: 0.0.0.0/0
      IpProtocol: udp
      GroupId: !Ref 'PublicSlaveSecurityGroup'
      FromPort: '23'
  PublicSlaveIngressSix:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      ToPort: '65535'
      CidrIp: 0.0.0.0/0
      IpProtocol: udp
      GroupId: !Ref 'PublicSlaveSecurityGroup'
      FromPort: '5052'
  PublicSlaveToMasterIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      ToPort: '65535'
      SourceSecurityGroupId: !Ref 'PublicSlaveSecurityGroup'
      IpProtocol: '-1'
      GroupId: !Ref 'MasterSecurityGroup'
      FromPort: '0'
  MasterToPublicSlaveIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      ToPort: '65535'
      SourceSecurityGroupId: !Ref 'MasterSecurityGroup'
      IpProtocol: '-1'
      GroupId: !Ref 'PublicSlaveSecurityGroup'
      FromPort: '0'
  SlaveToSlaveIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      ToPort: '65535'
      SourceSecurityGroupId: !Ref 'SlaveSecurityGroup'
      IpProtocol: '-1'
      GroupId: !Ref 'SlaveSecurityGroup'
      FromPort: '0'
  PublicSlaveToPublicSlaveIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      ToPort: '65535'
      SourceSecurityGroupId: !Ref 'PublicSlaveSecurityGroup'
      IpProtocol: '-1'
      GroupId: !Ref 'PublicSlaveSecurityGroup'
      FromPort: '0'
  ExhibitorS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
  MasterRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Resource:
            - !Join ['', ['arn:aws:s3:::', !Ref 'ExhibitorS3Bucket', /*]]
            - !Join ['', ['arn:aws:s3:::', !Ref 'ExhibitorS3Bucket']]
            Action:
            - s3:AbortMultipartUpload
            - s3:DeleteObject
            - s3:GetBucketAcl
            - s3:GetBucketPolicy
            - s3:GetObject
            - s3:GetObjectAcl
            - s3:ListBucket
            - s3:ListBucketMultipartUploads
            - s3:ListMultipartUploadParts
            - s3:PutObject
            - s3:PutObjectAcl
          - Effect: Allow
            Action:
            - cloudformation:*
            Resource:
            - !Ref 'AWS::StackId'
            - !Join ['', [!Ref 'AWS::StackId', /*]]
          - Effect: Allow
            Action:
            - ec2:DescribeKeyPairs
            - ec2:DescribeSubnets
            - autoscaling:DescribeLaunchConfigurations
            - autoscaling:UpdateAutoScalingGroup
            - autoscaling:DescribeAutoScalingGroups
            - autoscaling:DescribeScalingActivities
            - elasticloadbalancing:DescribeLoadBalancers
            Resource: '*'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - sts:AssumeRole
          Principal:
            Service:
            - ec2.amazonaws.com
  SlaveRole:
    Type: AWS::IAM::Role
    Properties:
      Policies:
      - PolicyName: Slaves
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - cloudformation:*
            Resource:
            - !Ref 'AWS::StackId'
            - !Join ['', [!Ref 'AWS::StackId', /*]]
          - Effect: Allow
            Action:
            - ec2:CreateTags
            - ec2:DescribeInstances
            - ec2:CreateVolume
            - ec2:DeleteVolume
            - ec2:AttachVolume
            - ec2:DetachVolume
            - ec2:DescribeVolumes
            - ec2:DescribeVolumeStatus
            - ec2:DescribeVolumeAttribute
            - ec2:CreateSnapshot
            - ec2:CopySnapshot
            - ec2:DeleteSnapshot
            - ec2:DescribeSnapshots
            - ec2:DescribeSnapshotAttribute
            Resource: '*'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - sts:AssumeRole
          Principal:
            Service:
            - ec2.amazonaws.com
  MasterInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
      - !Ref 'MasterRole'
      Path: /
  SlaveInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
      - !Ref 'SlaveRole'
      Path: /
  PublicSlaveLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      CrossZone: 'true'
      Subnets:
      - !Ref 'PublicSubnetA'
      - !Ref 'PublicSubnetB'
      - !Ref 'PublicSubnetC'
      Listeners:
      - InstanceProtocol: HTTP
        LoadBalancerPort: '80'
        InstancePort: '80'
        Protocol: HTTP
      - InstanceProtocol: TCP
        LoadBalancerPort: '443'
        InstancePort: '443'
        Protocol: TCP
      SecurityGroups:
      - !Ref 'PublicSlaveSecurityGroup'
      HealthCheck:
        Timeout: '2'
        Target: HTTP:9090/_haproxy_health_check
        HealthyThreshold: '2'
        UnhealthyThreshold: '2'
        Interval: '5'
  InternalMasterLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      Scheme: internal
      CrossZone: 'true'
      Subnets:
      - !Ref 'PublicSubnetA'
      - !Ref 'PublicSubnetB'
      - !Ref 'PublicSubnetC'
      Listeners:
      - InstanceProtocol: HTTP
        LoadBalancerPort: '5050'
        InstancePort: '5050'
        Protocol: HTTP
      - InstanceProtocol: TCP
        LoadBalancerPort: '2181'
        InstancePort: '2181'
        Protocol: TCP
      - InstanceProtocol: HTTP
        LoadBalancerPort: '8181'
        InstancePort: '8181'
        Protocol: HTTP
      - InstanceProtocol: HTTP
        LoadBalancerPort: '80'
        InstancePort: '80'
        Protocol: HTTP
      - InstanceProtocol: TCP
        LoadBalancerPort: '443'
        InstancePort: '443'
        Protocol: TCP
      - InstanceProtocol: HTTP
        LoadBalancerPort: '8080'
        InstancePort: '8080'
        Protocol: HTTP
      SecurityGroups:
      - !Ref 'LbSecurityGroup'
      - !Ref 'AdminSecurityGroup'
      - !Ref 'SlaveSecurityGroup'
      - !Ref 'PublicSlaveSecurityGroup'
      - !Ref 'MasterSecurityGroup'
      HealthCheck:
        Timeout: '5'
        Target: HTTP:5050/health
        HealthyThreshold: '2'
        UnhealthyThreshold: '2'
        Interval: '30'
  ElasticLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      CrossZone: 'true'
      Subnets:
      - !Ref 'PublicSubnetA'
      - !Ref 'PublicSubnetB'
      - !Ref 'PublicSubnetC'
      Listeners:
      - InstanceProtocol: HTTP
        LoadBalancerPort: '80'
        InstancePort: '80'
        Protocol: HTTP
      - InstanceProtocol: TCP
        LoadBalancerPort: '443'
        InstancePort: '443'
        Protocol: TCP
      SecurityGroups:
      - !Ref 'LbSecurityGroup'
      - !Ref 'AdminSecurityGroup'
      HealthCheck:
        Timeout: '5'
        Target: HTTP:5050/health
        HealthyThreshold: '2'
        UnhealthyThreshold: '2'
        Interval: '30'
  SlaveLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: 'false'
      ImageId: !If [CustomCoreOSAMI, !Ref 'Ami', !FindInMap [RegionMap, !Ref 'AWS::Region',
          AMI]]
      IamInstanceProfile: !Ref 'SlaveInstanceProfile'
      KeyName: !Ref 'SshKeyPair'
      BlockDeviceMappings:
      - DeviceName: /dev/sdb
        VirtualName: ephemeral0
      InstanceType: m3.xlarge
      SecurityGroups:
      - !Ref 'SlaveSecurityGroup'
      UserData: !Base64
        Fn::Join:
        - ''
        - - '#cloud-config'
          - '

            '
          - '"coreos":'
          - '

            '
          - '  "units":'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      start'
          - '

            '
          - '    "content": |'
          - '

            '
          - '      [Unit]'
          - '

            '
          - '      Description=AWS Setup: Formats the /var/lib ephemeral drive'
          - '

            '
          - '      Before=var-lib.mount dbus.service'
          - '

            '
          - '      [Service]'
          - '

            '
          - '      Type=oneshot'
          - '

            '
          - '      RemainAfterExit=yes'
          - '

            '
          - '      ExecStart=/bin/bash -c "(blkid -t TYPE=ext4 | grep xvdb) || (/usr/sbin/mkfs.ext4
            -F /dev/xvdb)"'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      format-var-lib-ephemeral.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      start'
          - '

            '
          - '    "content": |'
          - '

            '
          - '      [Unit]'
          - '

            '
          - '      Description=AWS Setup: Mount /var/lib'
          - '

            '
          - '      Before=dbus.service'
          - '

            '
          - '      [Mount]'
          - '

            '
          - '      What=/dev/xvdb'
          - '

            '
          - '      Where=/var/lib'
          - '

            '
          - '      Type=ext4'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      var-lib.mount'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      stop'
          - '

            '
          - '    "mask": !!bool |-'
          - '

            '
          - '      true'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      etcd.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      stop'
          - '

            '
          - '    "mask": !!bool |-'
          - '

            '
          - '      true'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      update-engine.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      stop'
          - '

            '
          - '    "mask": !!bool |-'
          - '

            '
          - '      true'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      locksmithd.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      stop'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      systemd-resolved.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      restart'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      systemd-journald.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      restart'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      docker.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      start'
          - '

            '
          - '    "content": |'
          - '

            '
          - '      [Unit]'
          - '

            '
          - '      Before=dcos.target'
          - '

            '
          - '      [Service]'
          - '

            '
          - '      Type=oneshot'
          - '

            '
          - '      StandardOutput=journal+console'
          - '

            '
          - '      StandardError=journal+console'
          - '

            '
          - '      ExecStartPre=/usr/bin/mkdir -p /etc/profile.d'
          - '

            '
          - '      ExecStart=/usr/bin/ln -sf /opt/mesosphere/bin/add_dcos_path.sh
            /etc/profile.d/dcos.sh'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      dcos-link-env.service'
          - '

            '
          - '  - "content": |'
          - '

            '
          - '      [Unit]'
          - '

            '
          - '      Description=Pkgpanda: Download DC/OS to this host.'
          - '

            '
          - '      After=network-online.target'
          - '

            '
          - '      Wants=network-online.target'
          - '

            '
          - '      ConditionPathExists=!/opt/mesosphere/'
          - '

            '
          - '      [Service]'
          - '

            '
          - '      Type=oneshot'
          - '

            '
          - '      StandardOutput=journal+console'
          - '

            '
          - '      StandardError=journal+console'
          - '

            '
          - '      ExecStartPre=/usr/bin/curl --keepalive-time 2 -fLsSv --retry 20
            -Y 100000 -y 60 -o /tmp/bootstrap.tar.xz https://downloads.dcos.io/dcos/stable/bootstrap/58fd0833ce81b6244fc73bf65b5deb43217b0bd7.bootstrap.tar.xz'
          - '

            '
          - '      ExecStartPre=/usr/bin/mkdir -p /opt/mesosphere'
          - '

            '
          - '      ExecStart=/usr/bin/tar -axf /tmp/bootstrap.tar.xz -C /opt/mesosphere'
          - '

            '
          - '      ExecStartPost=-/usr/bin/rm -f /tmp/bootstrap.tar.xz'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      dcos-download.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      start'
          - '

            '
          - '    "content": |'
          - '

            '
          - '      [Unit]'
          - '

            '
          - '      Description=Pkgpanda: Specialize DC/OS for this host.'
          - '

            '
          - '      Requires=dcos-download.service'
          - '

            '
          - '      After=dcos-download.service'
          - '

            '
          - '      [Service]'
          - '

            '
          - '      Type=oneshot'
          - '

            '
          - '      StandardOutput=journal+console'
          - '

            '
          - '      StandardError=journal+console'
          - '

            '
          - '      EnvironmentFile=/opt/mesosphere/environment'
          - '

            '
          - '      ExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd'
          - '

            '
          - '      [Install]'
          - '

            '
          - '      WantedBy=multi-user.target'
          - '

            '
          - '    "enable": !!bool |-'
          - '

            '
          - '      true'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      dcos-setup.service'
          - '

            '
          - '    "no_block": !!bool |-'
          - '

            '
          - '      true'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      start'
          - '

            '
          - '    "content": |-'
          - '

            '
          - '      [Unit]'
          - '

            '
          - '      Description=AWS Setup: Signal CloudFormation Success'
          - '

            '
          - '      ConditionPathExists=!/var/lib/dcos-cfn-signal'
          - '

            '
          - '      [Service]'
          - '

            '
          - '      Type=simple'
          - '

            '
          - '      Restart=on-failure'
          - '

            '
          - '      StartLimitInterval=0'
          - '

            '
          - '      RestartSec=15s'
          - '

            '
          - '      EnvironmentFile=/opt/mesosphere/environment'
          - '

            '
          - '      EnvironmentFile=/opt/mesosphere/etc/cfn_signal_metadata'
          - '

            '
          - '      Environment="AWS_CFN_SIGNAL_THIS_RESOURCE=SlaveServerGroup"'
          - '

            '
          - '      ExecStartPre=/bin/ping -c1 leader.mesos'
          - '

            '
          - '      ExecStartPre=/opt/mesosphere/bin/cfn-signal'
          - '

            '
          - '      ExecStart=/usr/bin/touch /var/lib/dcos-cfn-signal'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      dcos-cfn-signal.service'
          - '

            '
          - '    "no_block": !!bool |-'
          - '

            '
          - '      true'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      start'
          - '

            '
          - '    "enable": |-'
          - '

            '
          - '      true'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      rpc-statd.service'
          - '

            '
          - '  - "content": |'
          - '

            '
          - '      [Mount]'
          - '

            '
          - '      What=AZ_ZONE.'
          - !Ref 'FileSystem'
          - '.efs.us-east-1.amazonaws.com:/'
          - '

            '
          - '      Where=/mnt/efs'
          - '

            '
          - '      Type=nfs'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      mnt-efs.mount'
          - '
  
            '
          - '  - "command": |-'
          - '

            '
          - '      start'
          - '

            '
          - '    "content": |-'
          - '

            '
          - '      [Unit]'
          - '

            '
          - '      Description=Mount EFS in this AZ'
          - '

            '
          - '      [Service]'
          - '

            '
          - '      Type=oneshot'
          - '

            '
          - '      ExecStart=/bin/sh -c "AZ_ZONE=$(curl -LSs http://169.254.169.254/latest/meta-data/placement/availability-zone); sed -i \"s/AZ_ZONE/$AZ_ZONE/\" /etc/systemd/system/mnt-efs.mount; systemctl daemon-reload; systemctl restart mnt-efs.mount"'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      efs-az.service'
          - '

            '
          - '  "update":'
          - '

            '
          - '    "reboot-strategy": |-'
          - '

            '
          - '      off'
          - '

            '
          - '"write_files":'
          - '

            '
          - '- "content": |'
          - '

            '
          - '    https://downloads.dcos.io/dcos/stable'
          - '

            '
          - '  "owner": |-'
          - '

            '
          - '    root'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/mesosphere/setup-flags/repository-url'
          - '

            '
          - '  "permissions": |-'
          - '

            '
          - '    0644'
          - '

            '
          - '- "content": |'
          - '

            '
          - '    '
          - !FindInMap [ClusterPackagesJson, default, default]
          - '

            '
          - '  "owner": |-'
          - '

            '
          - '    root'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/mesosphere/setup-flags/cluster-packages.json'
          - '

            '
          - '  "permissions": |-'
          - '

            '
          - '    0644'
          - '

            '
          - '- "content": |'
          - '

            '
          - '    [Journal]'
          - '

            '
          - '    MaxLevelConsole=warning'
          - '

            '
          - '    RateLimitInterval=1s'
          - '

            '
          - '    RateLimitBurst=20000'
          - '

            '
          - '  "owner": |-'
          - '

            '
          - '    root'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/systemd/journald.conf.d/dcos.conf'
          - '

            '
          - '  "permissions": |-'
          - '

            '
          - '    0644'
          - '

            '
          - '- "content": |'
          - '

            '
          - '    rexray:'
          - '

            '
          - '      loglevel: info'
          - '

            '
          - '      modules:'
          - '

            '
          - '        default-admin:'
          - '

            '
          - '          host: tcp://127.0.0.1:61003'
          - '

            '
          - '      storageDrivers:'
          - '

            '
          - '      - ec2'
          - '

            '
          - '      volume:'
          - '

            '
          - '        unmount:'
          - '

            '
          - '          ignoreusedcount: true'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/rexray/config.yml'
          - '

            '
          - '  "permissions": |-'
          - '

            '
          - '    0644'
          - '

            '
          - '- "content": |'
          - '

            '
          - '    "bound_values":'
          - '

            '
          - '      "adminrouter_auth_enabled": |-'
          - '

            '
          - '        '
          - !Ref 'OAuthEnabled'
          - '

            '
          - '      "agent_role": |-'
          - '

            '
          - '        '
          - !Ref 'SlaveRole'
          - '

            '
          - '      "aws_region": |-'
          - '

            '
          - '        '
          - !Ref 'AWS::Region'
          - '

            '
          - '      "aws_stack_id": |-'
          - '

            '
          - '        '
          - !Ref 'AWS::StackId'
          - '

            '
          - '      "aws_stack_name": |-'
          - '

            '
          - '        '
          - !Ref 'AWS::StackName'
          - '

            '
          - '      "cluster_name": |-'
          - '

            '
          - '        '
          - !Ref 'AWS::StackName'
          - '

            '
          - '      "exhibitor_address": |-'
          - '

            '
          - '        '
          - !GetAtt [InternalMasterLoadBalancer, DNSName]
          - '

            '
          - '      "master_external_loadbalancer": |-'
          - '

            '
          - '        '
          - !GetAtt [ElasticLoadBalancer, DNSName]
          - '

            '
          - '      "master_role": |-'
          - '

            '
          - '        '
          - !Ref 'MasterRole'
          - '

            '
          - '      "oauth_enabled": |-'
          - '

            '
          - '        '
          - !Ref 'OAuthEnabled'
          - '

            '
          - '      "s3_bucket": |-'
          - '

            '
          - '        '
          - !Ref 'ExhibitorS3Bucket'
          - '

            '
          - '      "s3_prefix": |-'
          - '

            '
          - '        '
          - !Ref 'AWS::StackName'
          - '

            '
          - '    "late_bound_package_id": |-'
          - '

            '
          - '      dcos-provider-959e9da3825c3edcf21a0d0fba72929d48efff9c-aws--setup'
          - '

            '
          - '  "owner": |-'
          - '

            '
          - '    root'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/mesosphere/setup-flags/late-config.yaml'
          - '

            '
          - '  "permissions": |-'
          - '

            '
          - '    0644'
          - '

            '
          - '- "content": ""'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/mesosphere/roles/slave'
          - '

            '
          - '- "content": ""'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/mesosphere/roles/aws'
          - '

            '
          - '- "content": |'
          - '

            '
          - '    OPTS_RPC_MOUNTD=""'
          - '
          
            '
          - '  "path": |-'
          - '

            '
          - '    /etc/conf.d/nfs'
          - '

            '
          - '  "permissions": |-'
          - '

            '
          - '    0644'
          - '

            '
  MasterLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: 'true'
      ImageId: !If [CustomCoreOSAMI, !Ref 'Ami', !FindInMap [RegionMap, !Ref 'AWS::Region',
          AMI]]
      IamInstanceProfile: !Ref 'MasterInstanceProfile'
      KeyName: !Ref 'SshKeyPair'
      BlockDeviceMappings:
      - DeviceName: /dev/sdb
        VirtualName: ephemeral0
      InstanceType: m3.xlarge
      SecurityGroups:
      - !Ref 'MasterSecurityGroup'
      - !Ref 'AdminSecurityGroup'
      UserData: !Base64
        Fn::Join:
        - ''
        - - '#cloud-config'
          - '

            '
          - '"coreos":'
          - '

            '
          - '  "units":'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      start'
          - '

            '
          - '    "content": |'
          - '

            '
          - '      [Unit]'
          - '

            '
          - '      Description=AWS Setup: Formats the /var/lib ephemeral drive'
          - '

            '
          - '      Before=var-lib.mount dbus.service'
          - '

            '
          - '      [Service]'
          - '

            '
          - '      Type=oneshot'
          - '

            '
          - '      RemainAfterExit=yes'
          - '

            '
          - '      ExecStart=/bin/bash -c "(blkid -t TYPE=ext4 | grep xvdb) || (/usr/sbin/mkfs.ext4
            -F /dev/xvdb)"'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      format-var-lib-ephemeral.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      start'
          - '

            '
          - '    "content": |'
          - '

            '
          - '      [Unit]'
          - '

            '
          - '      Description=AWS Setup: Mount /var/lib'
          - '

            '
          - '      Before=dbus.service'
          - '

            '
          - '      [Mount]'
          - '

            '
          - '      What=/dev/xvdb'
          - '

            '
          - '      Where=/var/lib'
          - '

            '
          - '      Type=ext4'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      var-lib.mount'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      stop'
          - '

            '
          - '    "mask": !!bool |-'
          - '

            '
          - '      true'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      etcd.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      stop'
          - '

            '
          - '    "mask": !!bool |-'
          - '

            '
          - '      true'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      update-engine.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      stop'
          - '

            '
          - '    "mask": !!bool |-'
          - '

            '
          - '      true'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      locksmithd.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      stop'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      systemd-resolved.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      restart'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      systemd-journald.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      restart'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      docker.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      start'
          - '

            '
          - '    "content": |'
          - '

            '
          - '      [Unit]'
          - '

            '
          - '      Before=dcos.target'
          - '

            '
          - '      [Service]'
          - '

            '
          - '      Type=oneshot'
          - '

            '
          - '      StandardOutput=journal+console'
          - '

            '
          - '      StandardError=journal+console'
          - '

            '
          - '      ExecStartPre=/usr/bin/mkdir -p /etc/profile.d'
          - '

            '
          - '      ExecStart=/usr/bin/ln -sf /opt/mesosphere/bin/add_dcos_path.sh
            /etc/profile.d/dcos.sh'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      dcos-link-env.service'
          - '

            '
          - '  - "content": |'
          - '

            '
          - '      [Unit]'
          - '

            '
          - '      Description=Pkgpanda: Download DC/OS to this host.'
          - '

            '
          - '      After=network-online.target'
          - '

            '
          - '      Wants=network-online.target'
          - '

            '
          - '      ConditionPathExists=!/opt/mesosphere/'
          - '

            '
          - '      [Service]'
          - '

            '
          - '      Type=oneshot'
          - '

            '
          - '      StandardOutput=journal+console'
          - '

            '
          - '      StandardError=journal+console'
          - '

            '
          - '      ExecStartPre=/usr/bin/curl --keepalive-time 2 -fLsSv --retry 20
            -Y 100000 -y 60 -o /tmp/bootstrap.tar.xz https://downloads.dcos.io/dcos/stable/bootstrap/58fd0833ce81b6244fc73bf65b5deb43217b0bd7.bootstrap.tar.xz'
          - '

            '
          - '      ExecStartPre=/usr/bin/mkdir -p /opt/mesosphere'
          - '

            '
          - '      ExecStart=/usr/bin/tar -axf /tmp/bootstrap.tar.xz -C /opt/mesosphere'
          - '

            '
          - '      ExecStartPost=-/usr/bin/rm -f /tmp/bootstrap.tar.xz'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      dcos-download.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      start'
          - '

            '
          - '    "content": |'
          - '

            '
          - '      [Unit]'
          - '

            '
          - '      Description=Pkgpanda: Specialize DC/OS for this host.'
          - '

            '
          - '      Requires=dcos-download.service'
          - '

            '
          - '      After=dcos-download.service'
          - '

            '
          - '      [Service]'
          - '

            '
          - '      Type=oneshot'
          - '

            '
          - '      StandardOutput=journal+console'
          - '

            '
          - '      StandardError=journal+console'
          - '

            '
          - '      EnvironmentFile=/opt/mesosphere/environment'
          - '

            '
          - '      ExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd'
          - '

            '
          - '      [Install]'
          - '

            '
          - '      WantedBy=multi-user.target'
          - '

            '
          - '    "enable": !!bool |-'
          - '

            '
          - '      true'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      dcos-setup.service'
          - '

            '
          - '    "no_block": !!bool |-'
          - '

            '
          - '      true'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      start'
          - '

            '
          - '    "content": |-'
          - '

            '
          - '      [Unit]'
          - '

            '
          - '      Description=AWS Setup: Signal CloudFormation Success'
          - '

            '
          - '      ConditionPathExists=!/var/lib/dcos-cfn-signal'
          - '

            '
          - '      [Service]'
          - '

            '
          - '      Type=simple'
          - '

            '
          - '      Restart=on-failure'
          - '

            '
          - '      StartLimitInterval=0'
          - '

            '
          - '      RestartSec=15s'
          - '

            '
          - '      EnvironmentFile=/opt/mesosphere/environment'
          - '

            '
          - '      EnvironmentFile=/opt/mesosphere/etc/cfn_signal_metadata'
          - '

            '
          - '      Environment="AWS_CFN_SIGNAL_THIS_RESOURCE=MasterServerGroup"'
          - '

            '
          - '      ExecStartPre=/bin/ping -c1 leader.mesos'
          - '

            '
          - '      ExecStartPre=/opt/mesosphere/bin/cfn-signal'
          - '

            '
          - '      ExecStart=/usr/bin/touch /var/lib/dcos-cfn-signal'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      dcos-cfn-signal.service'
          - '

            '
          - '    "no_block": !!bool |-'
          - '

            '
          - '      true'
          - '

            '
          - '  "update":'
          - '

            '
          - '    "reboot-strategy": |-'
          - '

            '
          - '      off'
          - '

            '
          - '"write_files":'
          - '

            '
          - '- "content": |'
          - '

            '
          - '    https://downloads.dcos.io/dcos/stable'
          - '

            '
          - '  "owner": |-'
          - '

            '
          - '    root'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/mesosphere/setup-flags/repository-url'
          - '

            '
          - '  "permissions": |-'
          - '

            '
          - '    0644'
          - '

            '
          - '- "content": |'
          - '

            '
          - '    '
          - !FindInMap [ClusterPackagesJson, default, default]
          - '

            '
          - '  "owner": |-'
          - '

            '
          - '    root'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/mesosphere/setup-flags/cluster-packages.json'
          - '

            '
          - '  "permissions": |-'
          - '

            '
          - '    0644'
          - '

            '
          - '- "content": |'
          - '

            '
          - '    [Journal]'
          - '

            '
          - '    MaxLevelConsole=warning'
          - '

            '
          - '    RateLimitInterval=1s'
          - '

            '
          - '    RateLimitBurst=20000'
          - '

            '
          - '  "owner": |-'
          - '

            '
          - '    root'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/systemd/journald.conf.d/dcos.conf'
          - '

            '
          - '  "permissions": |-'
          - '

            '
          - '    0644'
          - '

            '
          - '- "content": |'
          - '

            '
          - '    rexray:'
          - '

            '
          - '      loglevel: info'
          - '

            '
          - '      modules:'
          - '

            '
          - '        default-admin:'
          - '

            '
          - '          host: tcp://127.0.0.1:61003'
          - '

            '
          - '      storageDrivers:'
          - '

            '
          - '      - ec2'
          - '

            '
          - '      volume:'
          - '

            '
          - '        unmount:'
          - '

            '
          - '          ignoreusedcount: true'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/rexray/config.yml'
          - '

            '
          - '  "permissions": |-'
          - '

            '
          - '    0644'
          - '

            '
          - '- "content": |'
          - '

            '
          - '    "bound_values":'
          - '

            '
          - '      "adminrouter_auth_enabled": |-'
          - '

            '
          - '        '
          - !Ref 'OAuthEnabled'
          - '

            '
          - '      "agent_role": |-'
          - '

            '
          - '        '
          - !Ref 'SlaveRole'
          - '

            '
          - '      "aws_region": |-'
          - '

            '
          - '        '
          - !Ref 'AWS::Region'
          - '

            '
          - '      "aws_stack_id": |-'
          - '

            '
          - '        '
          - !Ref 'AWS::StackId'
          - '

            '
          - '      "aws_stack_name": |-'
          - '

            '
          - '        '
          - !Ref 'AWS::StackName'
          - '

            '
          - '      "cluster_name": |-'
          - '

            '
          - '        '
          - !Ref 'AWS::StackName'
          - '

            '
          - '      "exhibitor_address": |-'
          - '

            '
          - '        '
          - !GetAtt [InternalMasterLoadBalancer, DNSName]
          - '

            '
          - '      "master_external_loadbalancer": |-'
          - '

            '
          - '        '
          - !GetAtt [ElasticLoadBalancer, DNSName]
          - '

            '
          - '      "master_role": |-'
          - '

            '
          - '        '
          - !Ref 'MasterRole'
          - '

            '
          - '      "oauth_enabled": |-'
          - '

            '
          - '        '
          - !Ref 'OAuthEnabled'
          - '

            '
          - '      "s3_bucket": |-'
          - '

            '
          - '        '
          - !Ref 'ExhibitorS3Bucket'
          - '

            '
          - '      "s3_prefix": |-'
          - '

            '
          - '        '
          - !Ref 'AWS::StackName'
          - '

            '
          - '    "late_bound_package_id": |-'
          - '

            '
          - '      dcos-provider-959e9da3825c3edcf21a0d0fba72929d48efff9c-aws--setup'
          - '

            '
          - '  "owner": |-'
          - '

            '
          - '    root'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/mesosphere/setup-flags/late-config.yaml'
          - '

            '
          - '  "permissions": |-'
          - '

            '
          - '    0644'
          - '

            '
          - '- "content": ""'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/mesosphere/roles/master'
          - '

            '
          - '- "content": ""'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/mesosphere/roles/aws_master'
          - '

            '
          - '- "content": ""'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/mesosphere/roles/aws'
          - '

            '
  PublicSlaveLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: 'true'
      ImageId: !If [CustomCoreOSAMI, !Ref 'Ami', !FindInMap [RegionMap, !Ref 'AWS::Region',
          AMI]]
      IamInstanceProfile: !Ref 'SlaveInstanceProfile'
      KeyName: !Ref 'SshKeyPair'
      BlockDeviceMappings:
      - DeviceName: /dev/sdb
        VirtualName: ephemeral0
      InstanceType: m3.xlarge
      SecurityGroups:
      - !Ref 'PublicSlaveSecurityGroup'
      UserData: !Base64
        Fn::Join:
        - ''
        - - '#cloud-config'
          - '

            '
          - '"coreos":'
          - '

            '
          - '  "units":'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      start'
          - '

            '
          - '    "content": |'
          - '

            '
          - '      [Unit]'
          - '

            '
          - '      Description=AWS Setup: Formats the /var/lib ephemeral drive'
          - '

            '
          - '      Before=var-lib.mount dbus.service'
          - '

            '
          - '      [Service]'
          - '

            '
          - '      Type=oneshot'
          - '

            '
          - '      RemainAfterExit=yes'
          - '

            '
          - '      ExecStart=/bin/bash -c "(blkid -t TYPE=ext4 | grep xvdb) || (/usr/sbin/mkfs.ext4
            -F /dev/xvdb)"'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      format-var-lib-ephemeral.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      start'
          - '

            '
          - '    "content": |'
          - '

            '
          - '      [Unit]'
          - '

            '
          - '      Description=AWS Setup: Mount /var/lib'
          - '

            '
          - '      Before=dbus.service'
          - '

            '
          - '      [Mount]'
          - '

            '
          - '      What=/dev/xvdb'
          - '

            '
          - '      Where=/var/lib'
          - '

            '
          - '      Type=ext4'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      var-lib.mount'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      stop'
          - '

            '
          - '    "mask": !!bool |-'
          - '

            '
          - '      true'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      etcd.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      stop'
          - '

            '
          - '    "mask": !!bool |-'
          - '

            '
          - '      true'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      update-engine.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      stop'
          - '

            '
          - '    "mask": !!bool |-'
          - '

            '
          - '      true'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      locksmithd.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      stop'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      systemd-resolved.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      restart'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      systemd-journald.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      restart'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      docker.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      start'
          - '

            '
          - '    "content": |'
          - '

            '
          - '      [Unit]'
          - '

            '
          - '      Before=dcos.target'
          - '

            '
          - '      [Service]'
          - '

            '
          - '      Type=oneshot'
          - '

            '
          - '      StandardOutput=journal+console'
          - '

            '
          - '      StandardError=journal+console'
          - '

            '
          - '      ExecStartPre=/usr/bin/mkdir -p /etc/profile.d'
          - '

            '
          - '      ExecStart=/usr/bin/ln -sf /opt/mesosphere/bin/add_dcos_path.sh
            /etc/profile.d/dcos.sh'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      dcos-link-env.service'
          - '

            '
          - '  - "content": |'
          - '

            '
          - '      [Unit]'
          - '

            '
          - '      Description=Pkgpanda: Download DC/OS to this host.'
          - '

            '
          - '      After=network-online.target'
          - '

            '
          - '      Wants=network-online.target'
          - '

            '
          - '      ConditionPathExists=!/opt/mesosphere/'
          - '

            '
          - '      [Service]'
          - '

            '
          - '      Type=oneshot'
          - '

            '
          - '      StandardOutput=journal+console'
          - '

            '
          - '      StandardError=journal+console'
          - '

            '
          - '      ExecStartPre=/usr/bin/curl --keepalive-time 2 -fLsSv --retry 20
            -Y 100000 -y 60 -o /tmp/bootstrap.tar.xz https://downloads.dcos.io/dcos/stable/bootstrap/58fd0833ce81b6244fc73bf65b5deb43217b0bd7.bootstrap.tar.xz'
          - '

            '
          - '      ExecStartPre=/usr/bin/mkdir -p /opt/mesosphere'
          - '

            '
          - '      ExecStart=/usr/bin/tar -axf /tmp/bootstrap.tar.xz -C /opt/mesosphere'
          - '

            '
          - '      ExecStartPost=-/usr/bin/rm -f /tmp/bootstrap.tar.xz'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      dcos-download.service'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      start'
          - '

            '
          - '    "content": |'
          - '

            '
          - '      [Unit]'
          - '

            '
          - '      Description=Pkgpanda: Specialize DC/OS for this host.'
          - '

            '
          - '      Requires=dcos-download.service'
          - '

            '
          - '      After=dcos-download.service'
          - '

            '
          - '      [Service]'
          - '

            '
          - '      Type=oneshot'
          - '

            '
          - '      StandardOutput=journal+console'
          - '

            '
          - '      StandardError=journal+console'
          - '

            '
          - '      EnvironmentFile=/opt/mesosphere/environment'
          - '

            '
          - '      ExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd'
          - '

            '
          - '      [Install]'
          - '

            '
          - '      WantedBy=multi-user.target'
          - '

            '
          - '    "enable": !!bool |-'
          - '

            '
          - '      true'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      dcos-setup.service'
          - '

            '
          - '    "no_block": !!bool |-'
          - '

            '
          - '      true'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      start'
          - '

            '
          - '    "content": |-'
          - '

            '
          - '      [Unit]'
          - '

            '
          - '      Description=AWS Setup: Signal CloudFormation Success'
          - '

            '
          - '      ConditionPathExists=!/var/lib/dcos-cfn-signal'
          - '

            '
          - '      [Service]'
          - '

            '
          - '      Type=simple'
          - '

            '
          - '      Restart=on-failure'
          - '

            '
          - '      StartLimitInterval=0'
          - '

            '
          - '      RestartSec=15s'
          - '

            '
          - '      EnvironmentFile=/opt/mesosphere/environment'
          - '

            '
          - '      EnvironmentFile=/opt/mesosphere/etc/cfn_signal_metadata'
          - '

            '
          - '      Environment="AWS_CFN_SIGNAL_THIS_RESOURCE=PublicSlaveServerGroup"'
          - '

            '
          - '      ExecStartPre=/bin/ping -c1 leader.mesos'
          - '

            '
          - '      ExecStartPre=/opt/mesosphere/bin/cfn-signal'
          - '

            '
          - '      ExecStart=/usr/bin/touch /var/lib/dcos-cfn-signal'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      dcos-cfn-signal.service'
          - '

            '
          - '    "no_block": !!bool |-'
          - '

            '
          - '      true'
          - '

            '
          - '  - "command": |-'
          - '

            '
          - '      start'
          - '

            '
          - '    "enable": |-'
          - '

            '
          - '      true'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      rpc-statd.service'
          - '

            '
          - '  - "content": |'
          - '

            '
          - '      [Mount]'
          - '

            '
          - '      What=AZ_ZONE.'
          - !Ref 'FileSystem'
          - '.efs.us-east-1.amazonaws.com:/'
          - '

            '
          - '      Where=/mnt/efs'
          - '

            '
          - '      Type=nfs'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      mnt-efs.mount'
          - '
  
            '
          - '  - "command": |-'
          - '

            '
          - '      start'
          - '

            '
          - '    "content": |-'
          - '

            '
          - '      [Unit]'
          - '

            '
          - '      Description=Mount EFS in this AZ'
          - '

            '
          - '      [Service]'
          - '

            '
          - '      Type=oneshot'
          - '

            '
          - '      ExecStart=/bin/sh -c "AZ_ZONE=$(curl -L http://169.254.169.254/latest/meta-data/placement/availability-zone); sed -i \"s/AZ_ZONE/$AZ_ZONE/\" /etc/systemd/system/mnt-efs.mount; systemctl daemon-reload; systemctl restart mnt-efs.mount"'
          - '

            '
          - '    "name": |-'
          - '

            '
          - '      efs-az.service'
          - '

            '
          - '  "update":'
          - '

            '
          - '    "reboot-strategy": |-'
          - '

            '
          - '      off'
          - '

            '
          - '"write_files":'
          - '

            '
          - '- "content": |'
          - '

            '
          - '    https://downloads.dcos.io/dcos/stable'
          - '

            '
          - '  "owner": |-'
          - '

            '
          - '    root'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/mesosphere/setup-flags/repository-url'
          - '

            '
          - '  "permissions": |-'
          - '

            '
          - '    0644'
          - '

            '
          - '- "content": |'
          - '

            '
          - '    '
          - !FindInMap [ClusterPackagesJson, default, default]
          - '

            '
          - '  "owner": |-'
          - '

            '
          - '    root'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/mesosphere/setup-flags/cluster-packages.json'
          - '

            '
          - '  "permissions": |-'
          - '

            '
          - '    0644'
          - '

            '
          - '- "content": |'
          - '

            '
          - '    [Journal]'
          - '

            '
          - '    MaxLevelConsole=warning'
          - '

            '
          - '    RateLimitInterval=1s'
          - '

            '
          - '    RateLimitBurst=20000'
          - '

            '
          - '  "owner": |-'
          - '

            '
          - '    root'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/systemd/journald.conf.d/dcos.conf'
          - '

            '
          - '  "permissions": |-'
          - '

            '
          - '    0644'
          - '

            '
          - '- "content": |'
          - '

            '
          - '    rexray:'
          - '

            '
          - '      loglevel: info'
          - '

            '
          - '      modules:'
          - '

            '
          - '        default-admin:'
          - '

            '
          - '          host: tcp://127.0.0.1:61003'
          - '

            '
          - '      storageDrivers:'
          - '

            '
          - '      - ec2'
          - '

            '
          - '      volume:'
          - '

            '
          - '        unmount:'
          - '

            '
          - '          ignoreusedcount: true'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/rexray/config.yml'
          - '

            '
          - '  "permissions": |-'
          - '

            '
          - '    0644'
          - '

            '
          - '- "content": |'
          - '

            '
          - '    "bound_values":'
          - '

            '
          - '      "adminrouter_auth_enabled": |-'
          - '

            '
          - '        '
          - !Ref 'OAuthEnabled'
          - '

            '
          - '      "agent_role": |-'
          - '

            '
          - '        '
          - !Ref 'SlaveRole'
          - '

            '
          - '      "aws_region": |-'
          - '

            '
          - '        '
          - !Ref 'AWS::Region'
          - '

            '
          - '      "aws_stack_id": |-'
          - '

            '
          - '        '
          - !Ref 'AWS::StackId'
          - '

            '
          - '      "aws_stack_name": |-'
          - '

            '
          - '        '
          - !Ref 'AWS::StackName'
          - '

            '
          - '      "cluster_name": |-'
          - '

            '
          - '        '
          - !Ref 'AWS::StackName'
          - '

            '
          - '      "exhibitor_address": |-'
          - '

            '
          - '        '
          - !GetAtt [InternalMasterLoadBalancer, DNSName]
          - '

            '
          - '      "master_external_loadbalancer": |-'
          - '

            '
          - '        '
          - !GetAtt [ElasticLoadBalancer, DNSName]
          - '

            '
          - '      "master_role": |-'
          - '

            '
          - '        '
          - !Ref 'MasterRole'
          - '

            '
          - '      "oauth_enabled": |-'
          - '

            '
          - '        '
          - !Ref 'OAuthEnabled'
          - '

            '
          - '      "s3_bucket": |-'
          - '

            '
          - '        '
          - !Ref 'ExhibitorS3Bucket'
          - '

            '
          - '      "s3_prefix": |-'
          - '

            '
          - '        '
          - !Ref 'AWS::StackName'
          - '

            '
          - '    "late_bound_package_id": |-'
          - '

            '
          - '      dcos-provider-959e9da3825c3edcf21a0d0fba72929d48efff9c-aws--setup'
          - '

            '
          - '  "owner": |-'
          - '

            '
          - '    root'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/mesosphere/setup-flags/late-config.yaml'
          - '

            '
          - '  "permissions": |-'
          - '

            '
          - '    0644'
          - '

            '
          - '- "content": ""'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/mesosphere/roles/slave_public'
          - '

            '
          - '- "content": ""'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/mesosphere/roles/aws'
          - '

            '
          - '- "content": |'
          - '

            '
          - '    OPTS_RPC_MOUNTD=""'
          - '

            '
          - '  "path": |-'
          - '

            '
          - '    /etc/conf.d/nfs'
          - '

            '
          - '  "permissions": |-'
          - '

            '
          - '    0644'
          - '

            '
  MasterServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    CreationPolicy:
      ResourceSignal:
        Timeout: PT45M
        Count: !Ref 'NumMasterNodes'
    Properties:
      LaunchConfigurationName: !Ref 'MasterLaunchConfig'
      VPCZoneIdentifier:
      - !Ref 'PublicSubnetA'
      - !Ref 'PublicSubnetB'
      - !Ref 'PublicSubnetC'
      DesiredCapacity: !Ref 'NumMasterNodes'
      MinSize: !Ref 'NumMasterNodes'
      MaxSize: !Ref 'NumMasterNodes'
      LoadBalancerNames:
      - !Ref 'ElasticLoadBalancer'
      - !Ref 'InternalMasterLoadBalancer'
      Tags:
      - Value: mesos-master
        Key: role
        PropagateAtLaunch: 'true'
  PublicSlaveServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    CreationPolicy:
      ResourceSignal:
        Timeout: PT45M
        Count: !Ref 'NumPublicSlaveNodes'
    Properties:
      LaunchConfigurationName: !Ref 'PublicSlaveLaunchConfig'
      VPCZoneIdentifier:
      - !Ref 'PublicSubnetA'
      - !Ref 'PublicSubnetB'
      - !Ref 'PublicSubnetC'
      DesiredCapacity: !Ref 'NumPublicSlaveNodes'
      MinSize: !Ref 'NumPublicSlaveNodes'
      MaxSize: !Ref 'NumPublicSlaveNodes'
      LoadBalancerNames:
      - !Ref 'PublicSlaveLoadBalancer'
      Tags:
      - Value: mesos-slave
        Key: role
        PropagateAtLaunch: 'true'
  SlaveServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    CreationPolicy:
      ResourceSignal:
        Timeout: PT45M
        Count: !Ref 'NumPrivateSlaveNodes'
    Properties:
      LaunchConfigurationName: !Ref 'SlaveLaunchConfig'
      VPCZoneIdentifier:
      - !Ref 'PrivateSubnetA'
      - !Ref 'PrivateSubnetB'
      - !Ref 'PrivateSubnetC'
      DesiredCapacity: !Ref 'NumPrivateSlaveNodes'
      MinSize: !Ref 'NumPrivateSlaveNodes'
      MaxSize: !Ref 'NumPrivateSlaveNodes'
      Tags:
      - Value: mesos-slave
        Key: role
        PropagateAtLaunch: 'true'

      
Outputs:
  Owner:
    Description: Team or Individual that Owns this Formation.
    Value: !Ref Owner
  Project:
    Description: The project name
    Value: !Ref Project
  FileSystem:
    Description: FileSystem
    Value: !Ref FileSystem
  DnsAddress:
    Description: Mesos master
    Value: !GetAtt [ElasticLoadBalancer, DNSName]
  ExhibitorS3Bucket:
    Description: Exhibitor S3 bucket name
    Value: !Ref 'ExhibitorS3Bucket'
  PublicSlaveDnsAddress:
    Description: Public slaves
    Value: !GetAtt [PublicSlaveLoadBalancer, DNSName]
